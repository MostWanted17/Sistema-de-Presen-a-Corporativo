<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cn3WiRP/AiXBskVcz1rbAAAAAElFTkSuQmCC
</value>
  </data>
</root>